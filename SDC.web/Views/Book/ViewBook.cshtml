
@model SDC.data.ViewModels.BookViewModel

@using SDC.data.Entity;

@{
    ViewBag.Title = Model.Title;
}

@{
    var profile = ((UserProfile)Session["UserInfo"]);
    var canEditBook = profile.IsAdmin || profile.IsCurator || Model.OwnerId == profile.UserId;
}

<div class="btn-group margin-bottom">
    @if (canEditBook)
    {
        <a class="btn btn-default"  href="javascript:void(0);" onclick="$('#editBookModal').modal('show');">
            <i class="fa fa-edit"></i> Change</a>
        <a class="btn btn-default" onclick="deleteBook(@Model.Id);">
            <i class="fa fa-remove sdc-icon-r"></i> Delete</a>
    }
    <a class="btn btn-default" href="@Url.Action("Details", "Shelves", new { id = Model.ShelfId})">
        <i class="fa fa-list"></i> View shelf</a>
</div>
    @if (ViewBag.ShowEditor)
    {
        <script>
            $(function () {
                $('#editBookModal').modal('show');
            });
        </script>
    }

    @if (canEditBook)
    {
        <!-- set up delete book urls-->
        <script type="text/javascript">
            var _pageJsObject = {
                deleteBookUrl: '@Url.Action("DeleteBook", "Book")',
                redirectUrl: '@Url.Action("Details", "Shelves", new { id = Model.ShelfId })'
            };
        </script>
        <!-- load shared delete book script-->
        <script type="text/javascript" src="~/Scripts/Custom/DeleteBook.js"></script>
        <!-- load modal for editing a book-->
        @Html.Partial("Shelves/_EditBookModal")
    }


<div class="box">
    <div class="box-body">
        <div class="row">
            <div class="col-md-6">
                <h4>@Model.Title</h4>
                <input type="hidden" value="@Model.Id" id="bookId" />
                <span>
                    by
                    @{
                        IEnumerable<string> links = Model.Authors.Select(p =>
                        {
                            return String.Format("<a href='{0}'>{1}</a>",
                                                Url.Action("ViewAuthor", "Authors", new { id = p.Id }),
                                                p.Name);
                        });
                        if(links.Count() > 0)
                        {
                            WriteLiteral(links.Aggregate((f, s) => f + ", " + s));
                        }
                        else
                        {
                            WriteLiteral("-");
                        }
                    }
                </span>
                <p>
                    @Model.Description
                </p>
                <hr />
                @if(Model.Year != 0 || Model.Publisher != null)
                {
                    <text>
                        <span>Published</span>

                        @if(Model.Year != 0)
                        {
                            <span> in @Model.Year</span>
                        }
                        @if(Model.Publisher != null)
                        {
                            <span> by @Model.Publisher.Name</span>
                        }
                    </text>
                }
                <div>
                    Owned by <a href="@Url.Action("Profile", "Users", new { id=Model.OwnerId})">
                        @Model.OwnerName
                    </a>
                </div>
            </div>
            <div class="col-md-6">

                    <div class="row margin">
                        @foreach (var picture in Model.Pictures)
                        {
                            <div class="col-md-3 margin-bottom">
                                <img src="@picture.Url"
                                     class="img-rounded"
                                     width="75" height="75" />
                            </div>
                        }
                    </div>
                

            </div>
        </div>



    </div>
</div>