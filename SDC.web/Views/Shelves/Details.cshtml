@model SDC.web.ViewModels.ShelfViewModel

@{
    ViewBag.Title = Model.Name;
}

@section Page_Styles{
    <!--css/style.css-->
<!-- Generic page styles -->
<link rel="stylesheet" href="~/Scripts/jqfu/css/style.css">
<!-- blueimp Gallery styles -->
<!-- <link rel="stylesheet" href="//blueimp.github.io/Gallery/css/blueimp-gallery.min.css">-->
<!-- CSS to style the file input field as button and adjust the Bootstrap progress bars -->
<link rel="stylesheet" href="~/Scripts/jqfu/css/jquery.fileupload.css">
<link rel="stylesheet" href="~/Scripts/jqfu/css/jquery.fileupload-ui.css">
<!-- CSS adjustments for browsers with JavaScript disabled -->
<noscript><link rel="stylesheet" href="~/Scripts/jqfu/css/jquery.fileupload-noscript.css"></noscript>
<noscript><link rel="stylesheet" href="~/Scripts/jqfu/css/jquery.fileupload-ui-noscript.css"></noscript>
}

@section Page_Scripts{

<!--<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>-->
<!-- The jQuery UI widget factory, can be omitted if jQuery UI is already included -->
<script src="~/Scripts/jqfu/js/vendor/jquery.ui.widget.js"></script>

@*<!-- The Templates plugin is included to render the upload/download listings -->
<script src="//blueimp.github.io/JavaScript-Templates/js/tmpl.min.js"></script>
<!-- The Load Image plugin is included for the preview images and image resizing functionality -->
<script src="//blueimp.github.io/JavaScript-Load-Image/js/load-image.all.min.js"></script>
<!-- The Canvas to Blob plugin is included for image resizing functionality -->
<script src="//blueimp.github.io/JavaScript-Canvas-to-Blob/js/canvas-to-blob.min.js"></script>
<!-- Bootstrap JS is not required, but included for the responsive demo navigation -->
<script src="//netdna.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>
<!-- blueimp Gallery script -->
<script src="//blueimp.github.io/Gallery/js/jquery.blueimp-gallery.min.js"></script>



<!-- The Iframe Transport is required for browsers without support for XHR file uploads -->
<script src="~/Scripts/jqfu/js/jquery.iframe-transport.js"></script>
<!-- The basic File Upload plugin -->
<script src="~/Scripts/jqfu/js/jquery.fileupload.js"></script>
<!-- The File Upload processing plugin -->
<script src="~/Scripts/jqfu/js/jquery.fileupload-process.js"></script>
<!-- The File Upload image preview & resize plugin -->
<script src="~/Scripts/jqfu/js/jquery.fileupload-image.js"></script>
<!-- The File Upload audio preview plugin -->
<script src="~/Scripts/jqfu/js/jquery.fileupload-audio.js"></script>
<!-- The File Upload video preview plugin -->
<script src="~/Scripts/jqfu/js/jquery.fileupload-video.js"></script>
<!-- The File Upload validation plugin -->
<script src="~/Scripts/jqfu/js/jquery.fileupload-validate.js"></script>
<!-- The File Upload user interface plugin -->
<script src="~/Scripts/jqfu/js/jquery.fileupload-ui.js"></script>
<!-- The main application script -->
<script src="~/Scripts/jqfu/js/main.js"></script>
<!-- The XDomainRequest Transport is included for cross-domain file deletion for IE 8 and IE 9 -->
<!--[if (gte IE 8)&(lt IE 10)]>
<script src="js/cors/jquery.xdr-transport.js"></script>
<![endif]-->
    *@
}

<script type="text/javascript">

    function deleteBook(id) {
        bootbox.confirm(
        "Are you sure you want to delete this book?",
        function (result) {
            if (result) {
                $.ajax({
                    url:'@Url.Action("DeleteBook")',
                    type:'POST',
                    data: { deleteBookId: id },
                    error: function (response) {
                        toastr.error('error deleting book', 'error')
                    },
                    success: function (response) {
                        $('#book-' + id).remove();
                    }
                });
            }
        });
    }

</script>

<a class="btn btn-primary margin-bottom" onclick="$('#newBookModal').modal('show');">
     Add a book
</a>

<a class="btn btn-default margin-bottom" href="@Url.Action("Index")">Go back</a>

@Html.Partial("Shelves/_AddBookModal", Model)






<div class="box">
    <div class="box-header">
        <div class="box-title">Books in @Model.Name : <strong>@Model.BookCount books.</strong></div>
    </div>
    <div class="box-body">
        <table class="table table-hover table-striped">
            <thead>
                <tr>
                    <td><strong>Title</strong></td>
                    <td><strong>Author(s)</strong></td>
                    <td><strong>Genre</strong></td>
                    <td><strong>Year</strong></td>
                    <td><strong>Publisher</strong></td>
                    <td></td>
                </tr>
            </thead>
 
            @if(Model.BookCount == 0)
            {
                <tr>
                    <td colspan="6">There are no books on this shelf.</td>
                </tr>
            }

            @foreach(var book in Model.Books)
            {
                <tr id="book-@book.Id">
                    <td>
                        <strong>
                            <a href="@Url.Action("ViewBook", "Book", new { id = book.Id })">
                                @book.Title
                            </a>    
                        </strong>
                    </td>
                    <td>
                        <ul>
                            @foreach (var author in book.Authors)
                            {
                                <li>
                                    <a href="@Url.Action("ViewAuthor", "Authors", new { id = author.Id })">
                                        @author.Name
                                    </a>
                                </li>
                            }
                        </ul>
                    </td>
                    <td>
                        <ul>
                            @foreach(var genre in book.Genres)
                            {
                                <li>@genre.Name</li>
                            }
                        </ul>
                    </td>
                    <td>
                        @book.Year
                    </td>
                    <td>
                        @((book.Publisher == null) ? "-" : book.Publisher.Name)
                    </td>

                    <td>
                        <a href="javascript:void(0)" onclick="deleteBook(@book.Id)">
                            <span class="glyphicon glyphicon-trash"></span>
                            <span>Delete</span>
                        </a>
                    </td>
                </tr>
            }

        </table>
        @using (Html.BeginForm("DeleteBook", "Book", FormMethod.Post, new { id = "deleteBookForm" }))
        {
            <input type="hidden" id="deleteBookId" name="deleteBookId" />
        }
    </div>
    <div class="box-footer">
        <nav>
            <span>Pages:</span>
            <ul class="pagination" style="vertical-align:middle;">
                <li class='@((Model.Page==1)?"disabled":"")'>
                    @if (Model.Page > 1)
                    {
                        <a href="@Url.Action("Details", "Shelves", new {
                            id=Model.Id,
                            page=Model.Page-1,
                            pagesize=Model.PageSize
                        })" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    }
                    else
                    {
                        <span>&laquo;</span>
                    }
                </li>
                @for(int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class='@((Model.Page== i)?"active":"")'>
                        <a href="@Url.Action("Details", "Shelves", new {
                                id = Model.Id,
                                page = i,
                                pagesize = Model.PageSize })">@i</a>
                    </li>
                }
                <li class='@((Model.TotalPages == Model.Page) ? "disabled" : "")'>
                    @if (Model.Page < Model.TotalPages)
                    {
                        <a href="@Url.Action("Details", "Shelves", new {
                            id=Model.Id,
                            page=Model.Page+1,
                            pagesize=Model.PageSize
                        }) " aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    }
                    else
                    {
                        <span>&raquo;</span>
                    }
                </li>
            </ul>
            <span> showing books <strong>
                @((Model.PageSize * (Model.Page - 1)) + 1)
                -
                @((Model.PageSize * (Model.Page - 1)) + Model.Books.Count)</strong>
            </span>
            <div class="pull-right">
                <span>Books per page:</span>
                <span class="dropdown">
                    <button class="btn flat dropdown-toggle"
                            type="button" data-toggle="dropdown"
                            aria-haspopup="true"
                            aria-expanded="true">
                        @Model.PageSize
                    </button>
                    <ul class="dropdown-menu">
                        <li><a href="@Url.Action("Details", new { id=Model.Id, page=1, pagesize=5})" >5 </a></li>
                        <li><a href="@Url.Action("Details", new { id=Model.Id, page=1, pagesize=10})">10 </a></li>
                        <li><a href="@Url.Action("Details", new { id=Model.Id, page=1, pagesize=50})">50 </a></li>
                    </ul>
                </span>
            </div>

        </nav>
    </div>
</div>
