@model SDC.web.ViewModels.ShelfViewModel

@{
    ViewBag.Title = "Details - " + Model.Name;
}

@section Page_Styles{
    <!--css/style.css-->
<!-- Generic page styles -->
<link rel="stylesheet" href="~/Scripts/jqfu/css/style.css">
<!-- blueimp Gallery styles -->
<!-- <link rel="stylesheet" href="//blueimp.github.io/Gallery/css/blueimp-gallery.min.css">-->
<!-- CSS to style the file input field as button and adjust the Bootstrap progress bars -->
<link rel="stylesheet" href="~/Scripts/jqfu/css/jquery.fileupload.css">
<link rel="stylesheet" href="~/Scripts/jqfu/css/jquery.fileupload-ui.css">
<!-- CSS adjustments for browsers with JavaScript disabled -->
<noscript><link rel="stylesheet" href="~/Scripts/jqfu/css/jquery.fileupload-noscript.css"></noscript>
<noscript><link rel="stylesheet" href="~/Scripts/jqfu/css/jquery.fileupload-ui-noscript.css"></noscript>
}

@section Page_Scripts{

<!--<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>-->
<!-- The jQuery UI widget factory, can be omitted if jQuery UI is already included -->
<script src="~/Scripts/jqfu/js/vendor/jquery.ui.widget.js"></script>

@*<!-- The Templates plugin is included to render the upload/download listings -->
<script src="//blueimp.github.io/JavaScript-Templates/js/tmpl.min.js"></script>
<!-- The Load Image plugin is included for the preview images and image resizing functionality -->
<script src="//blueimp.github.io/JavaScript-Load-Image/js/load-image.all.min.js"></script>
<!-- The Canvas to Blob plugin is included for image resizing functionality -->
<script src="//blueimp.github.io/JavaScript-Canvas-to-Blob/js/canvas-to-blob.min.js"></script>
<!-- Bootstrap JS is not required, but included for the responsive demo navigation -->
<script src="//netdna.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>
<!-- blueimp Gallery script -->
<script src="//blueimp.github.io/Gallery/js/jquery.blueimp-gallery.min.js"></script>*@



<!-- The Iframe Transport is required for browsers without support for XHR file uploads -->
<script src="~/Scripts/jqfu/js/jquery.iframe-transport.js"></script>
<!-- The basic File Upload plugin -->
<script src="~/Scripts/jqfu/js/jquery.fileupload.js"></script>
<!-- The File Upload processing plugin -->
<script src="~/Scripts/jqfu/js/jquery.fileupload-process.js"></script>
<!-- The File Upload image preview & resize plugin -->
<script src="~/Scripts/jqfu/js/jquery.fileupload-image.js"></script>
<!-- The File Upload audio preview plugin -->
<script src="~/Scripts/jqfu/js/jquery.fileupload-audio.js"></script>
<!-- The File Upload video preview plugin -->
<script src="~/Scripts/jqfu/js/jquery.fileupload-video.js"></script>
<!-- The File Upload validation plugin -->
<script src="~/Scripts/jqfu/js/jquery.fileupload-validate.js"></script>
<!-- The File Upload user interface plugin -->
<script src="~/Scripts/jqfu/js/jquery.fileupload-ui.js"></script>
<!-- The main application script -->
<script src="~/Scripts/jqfu/js/main.js"></script>
<!-- The XDomainRequest Transport is included for cross-domain file deletion for IE 8 and IE 9 -->
<!--[if (gte IE 8)&(lt IE 10)]>
<script src="js/cors/jquery.xdr-transport.js"></script>
<![endif]-->

}

<script type="text/javascript">

    function removeAuthor(removeAuthorLink) {
        var li = removeAuthorLink.parent();
        li.remove();
    }

    $(function () {
        //remove author
        $('.removeAuthor').click(function () {
            var c = $(this);
            removeAuthor(c);
        });

        $('.btnSaveNewBook').click(function (e) {

            /*

    [
                  { "Id": 0, "Name": "auth" },
                  { "Id": 0, "Name": "auth2" }
                ]

    [
                 { "Id": 1, "Name": "genre_name" }
                ]
    */
            var newBookObject =
            {

                "ShelfId": $(".shelfId").val(),
                "Id": 0,
                "Title": $(".bookTitle").val(),
                "Year": $(".bookYear").val(),
                "Authors": [],
                "Genres": [],
                "Language": {
                    "Code": $('.bookLanguage').find(":selected").attr("value"),
                    "Name": $('.bookLanguage').find(":selected").val()
                },
                "ISBN": $('.bookISBN').val(),
                "Publisher": {
                    "Id": $('.bookPublisher').attr('data-selected-id'),
                    "Name": $('.bookPublisher').attr('data-selected-name')
                }
            };

            var authorsLI = $('#newBookModal').find('.listAuthors').find('li').toArray();
            var authorsobj = authorsLI.map(function (li) {
                return {
                    "Id": $(li).attr('data-auth-id'),
                    "Name": $(li).attr('data-auth-name')
                };
            });

            newBookObject.Authors = authorsobj;

            $.ajax({
                url: "@Url.Action("AddBook", "Shelves")", 
                type: "POST",
                data: JSON.stringify(newBookObject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                error: function (response) {
                    alert(response.responseText);
                },
                succes: function (response) {
                    alert(response);
                }
            });

            e.preventDefault();
        });


        //add author
        $('#newBookModal').find('.btnAddAuthor').click(function () {

            var sbox = $('#newBookModal').find('.searchAuthor');
            var container = $('#newBookModal').find('.listAuthors');

            if (sbox.val().length == 0)
                return false;

            var authId = sbox.attr('data-selected-id');
            var authName = sbox.attr('data-selected-name');
            if (authId == undefined || authName == undefined) {
                authId = 0;
                authName = sbox.val();
            }
            var elem = $('<li></li>');
            elem.attr('data-auth-id', authId);
            elem.attr('data-auth-name', authName);

            container.append(elem);
            elem.html("<span>" + authName + "</span>");
            
            var removeAuthorLink = $("<a href='#' class='glyphicon glyphicon-remove removeAuthor'></a>");
            removeAuthorLink.click(function () {
                removeAuthor(removeAuthorLink);
            });
            elem.append(removeAuthorLink);
            

            sbox.val(null);
            return false;
        });

        $('#newBookModal').find('.searchAuthor').focus(function () {
            $('#newBookModal').find('.searchAuthor').attr('data-selected-id', null);
            $('#newBookModal').find('.searchAuthor').attr('data-selected-name', null);
        });

        //autocomplete for new book modal - author
        $('#newBookModal').find('.searchAuthor').autocomplete({
            source: "@Url.Action("GetAuthorsJson", "Helper")",
            minLength: 2,
            open: function (event, ui) {
                $(".ui-autocomplete").css("z-index", 1100);
            },
            focus: function (event, ui) {
                $('#newBookModal').find('.searchAuthor').val(ui.item.label);
                return false;
            },
            select: function (event, ui) {
                event.preventDefault();
                $('#newBookModal').find('.searchAuthor').val(ui.item.label);
                $('#newBookModal').find('.searchAuthor').attr('data-selected-id', ui.item.value);
                $('#newBookModal').find('.searchAuthor').attr('data-selected-name', ui.item.label);
            }
        })
        .data("ui-autocomplete")._renderItem = function (ul, item) {
            return $("<li></li>")
                .data("item.autocomplete", item)
                .append("<a href='#'>" + item.label + "</a>")
                .appendTo(ul);
        };

        //autocomplete for new book modal - publisher
        $('#newBookModal').find('.bookPublisher').autocomplete({
            source: "@Url.Action("GetPublishersJson", "Helper")",
            minLength: 2,
            open: function (event, ui) {
                $(".ui-autocomplete").css("z-index", 1100);
            },
            focus: function (event, ui) {
                $('#newBookModal').find('bookPublisher').val(ui.item.label);
                return false;
            },
            select: function (event, ui) {
                event.preventDefault();
                $('#newBookModal').find('.bookPublisher').val(ui.item.label);
                $('#newBookModal').find('.bookPublisher').attr('data-selected-id', ui.item.value);
                $('#newBookModal').find('.bookPublisher').attr('data-selected-name', ui.item.label);
            }
        })
        .data('ui-autocomplete')._renderItem = function (ul, item) {
            return $("<li></li>")
                .data("item.autocomplete", item)
                .append("<a href='#'>" + item.label + "</a>")
                .appendTo(ul);
        };

        //multiselect genres
        $('#newBookModal').find('.bookGenres').multiselect({
            enableCaseInsensitiveFiltering: true,
            maxHeight: 300
        });

        //submit form
        $('#addNewBookForm').submit(function (e) {
            e.preventDefault();
        });

    });


</script>

<a class="btn btn-primary margin-bottom" onclick="$('#newBookModal').modal('show');">
     Add a book
</a>

<a class="btn btn-default margin-bottom" href="@Url.Action("Index")">Go back</a>

<!-- new book modal -->
<div class="modal fade" id="newBookModal" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            @using (Html.BeginForm("AddBook", "Shelves", FormMethod.Post, new { id = "addNewBookForm" }))
            {
                <input type="hidden" value="@Model.Id" class="shelfId" />
                
                <div class="modal-header">
                    <div class="modal-title">
                        <h4>Add a new book</h4>
                    </div>
                </div>
                <div class="modal-body">
                    <div class="form-horizontal">
                        <div class="form-group">
                            <label class="col-sm-3 control-label">Title:</label>
                            <input type="text" class="form-control col-sm-7 bookTitle" /> 
                        </div>
                        <div class="form-group">
                            <label class="col-sm-3 control-label">Author(s):</label>
                            <!-- search box-->
                            <input type="text" class="col-sm-4 searchAuthor form-control pull-left" />
                            <!-- add-->
                            <button class="btn btn-default col-sm-1 btnAddAuthor">
                                Add
                            </button>
                            <!-- authors: vertical line -->
                            <div style="border-left: thick solid #ff0000;">
                                <!-- list-->
                                <ul class="listAuthors col-sm-4" style="list-style-type:none;"></ul>
                            </div>
                            

                        </div>
                        <div class="form-group">
                            <label class="col-sm-3 control-label">Genres:</label> 
                            <select class="col-sm-4 form-control bookGenres" multiple="multiple" size="10">
                                @foreach (var genre in Model.Genres)
                                {
                                    <option value="@genre.Id">@genre.Name</option>
                                }
                            </select> 
                        </div>
                        <div class="form-group">
                            <label class="col-sm-3 control-label">Year:</label>
                            <input type="number" class="col-sm-9 form-control bookYear" min="1" max="2016" />
                        </div>
                        <div class="form-group">
                            <label class="col-sm-3 control-label">Language:</label>
                            <select class="col-sm-9 form-control bookLanguage">
                                @foreach (var lang in Model.Languages)
                                {
                                    <option value="@lang.Code">@lang.Name</option>
                                }
                            </select>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-3 control-label">ISBN:</label>
                            <input class="col-sm-9 bookISBN form-control" type="text"/>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-3 control-label">Publisher:</label>
                            <!-- publisher search box-->
                            <input type="text" class="col-sm-9 bookPublisher form-control pull-left"/>
                        </div>
                    </div>
                </div>

                <div class="modal-footer">
                    <div class="btn-toolbar">
                        <button type="button" class="btn btn-default pull-right" onclick="$('#newBookModal').modal('hide');">Go back</button>
                        <button type="submit" class="btn btn-primary pull-right btnSaveNewBook">Save changes</button>
                    </div>
                </div>
            }

            <form id="fileupload"></form>
        </div>
    </div>
</div>




<div class="box">
    <div class="box-header">
        <div class="box-title">Books in @Model.Name : <strong>@Model.BookCount books.</strong></div>
    </div>
    <div class="box-body">
        <table class="table table-hover table-striped">
            <thead>
                <tr>
                    <td><strong>Title</strong></td>
                    <td><strong>Author(s)</strong></td>
                    <td><strong>Genre</strong></td>
                    <td><strong>Year</strong></td>
                    <td><strong>Publisher</strong></td>
                    <td></td>
                </tr>
            </thead>
 
            @if(Model.BookCount == 0)
            {
                <tr>
                    <td colspan="6">There are no books on this shelf.</td>
                </tr>
            }

            @foreach(var book in Model.Books)
            {
                <tr>
                    <td>
                        <strong>
                            <a href="@Url.Action("ViewBook", "Shelves", new { id = book.Id })">
                                @book.Title
                            </a>    
                        </strong>
                    </td>
                    <td>
                        <ul>
                            @foreach (var author in book.Authors)
                            {
                                <li>
                                    <a href="@Url.Action("ViewAuthor", "Authors", new { id = author.Id })">
                                        @author.Name
                                    </a>
                                </li>
                            }
                        </ul>
                    </td>
                    <td>
                        <ul>
                            @foreach(var genre in book.Genres)
                            {
                                <li>@genre.Name</li>
                            }
                        </ul>
                    </td>
                    <td>
                        @book.Year
                    </td>
                    <td>
                        @((book.Publisher == null) ? "-" : book.Publisher.Name)
                    </td>

                    <td>
                        <a href="#" onclick="deleteBook(@book.Id);">
                            <span class="glyphicon glyphicon-trash"></span>
                            <span>Delete</span>
                        </a>
                        |
                        <a href="#" onclick="editBook(@book.Id);">
                            <span class="glyphicon glyphicon-pencil"></span>
                            <span>Edit</span>
                        </a>
                    </td>
                </tr>
            }


        </table>
    </div>
</div>
