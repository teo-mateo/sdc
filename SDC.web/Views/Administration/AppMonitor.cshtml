
@model IEnumerable<SDC.web.Controllers.LogItem>
@using SDC.web.Controllers;
@using SDC.Library.Redis;

@{ 
    // default values
    string controllerActionOrderBy = ControllersOrderBy.ControllerActionAsc,
        countOrderBy = ControllersOrderBy.HitCountAsc,
        averageOrderBy = ControllersOrderBy.AvgResponseAsc;
    string controllerActionGlyph = "", countGlyph = "", averageGlyph = "";

    switch ((string)ViewBag.OrderBy)
    {
        case ControllersOrderBy.ControllerActionDesc:
            controllerActionOrderBy = ControllersOrderBy.ControllerActionAsc;
            controllerActionGlyph = "glyphicon glyphicon-arrow-down";
            break;
        case ControllersOrderBy.ControllerActionAsc:
            controllerActionOrderBy = ControllersOrderBy.ControllerActionDesc;
            controllerActionGlyph = "glyphicon glyphicon-arrow-up";
            break;
        case ControllersOrderBy.HitCountDesc:
            countOrderBy = ControllersOrderBy.HitCountAsc;
            countGlyph = "glyphicon glyphicon-arrow-down";
            break;
        case ControllersOrderBy.HitCountAsc:
            countOrderBy = ControllersOrderBy.HitCountDesc;
            countGlyph = "glyphicon glyphicon-arrow-up";
            break;
        case ControllersOrderBy.AvgResponseDesc:
            averageOrderBy = ControllersOrderBy.AvgResponseAsc;
            averageGlyph = "glyphicon glyphicon-arrow-down";
            break;
        case ControllersOrderBy.AvgResponseAsc:
            averageOrderBy = ControllersOrderBy.AvgResponseDesc;
            averageGlyph = "glyphicon glyphicon-arrow-up";
            break;
    }

}

<h3>Controllers &amp; actions</h3>
<div class="sdc-scroll-container">
    <table class="table table-condensed">
        <thead>
            <tr>
                <td><strong><a href='@Url.Action("AppMonitor", "Administration", new { orderby = controllerActionOrderBy })'>
                    Controller/Action
                    <span class='@controllerActionGlyph'></span>
                    </a></strong></td>
                <td><strong><a href='@Url.Action("AppMonitor", "Administration", new { orderby = countOrderBy })'>
                    Count
                    <span class='@countGlyph'></span>
                    </a></strong></td>
                <td><strong><a href='@Url.Action("AppMonitor", "Administration", new { orderby = averageOrderBy })'>Average response time (ms)
                    <span class='@averageGlyph'></span>
                    </a></strong></td>
            </tr>
        </thead>
        <tbody>
            @foreach (var logItem in Model)
    {
                <tr>
                    <td>@logItem.ControllerAction</td>
                    <td>@logItem.Count</td>
                    <td>@logItem.Average</td>
                </tr>
            }
        </tbody>
    </table>
</div>
<h3>Active users (last 5 minutes)</h3>
<ul class="list-group">
    @foreach (var user in ActivityTracker.GetActiveUsers())
    {
        <li class="list-group-item">
            @user
        </li>
    }
</ul>